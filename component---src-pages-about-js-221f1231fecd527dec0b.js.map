{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/divider.js","webpack:///./src/components/header.js","webpack:///./src/util/styling.js"],"names":["data","priorities","members","allTseMembers","edges","sort","a","b","node","role","name","localeCompare","map","value","key","className","fluid","image_node","childImageSharp","history_left","programming","history_right","title","subtitle","buttons","to","background","id","textColor","lineColor","gridify","query","Divider","Header","gradient","condense","text","length","substring","nbsp","repeat","elements","num_columns","rows","i","push","slice"],"mappings":"wSAgBe,sBAER,IADLA,EACI,EADJA,KAEMC,EAAa,CACjB,UAAa,EACb,gBAAiB,EACjB,cAAe,EACf,gBAAiB,EACjB,cAAe,EACf,oBAAqB,EACrB,kBAAmB,EACnB,UAAa,EACb,iBAAkB,GAIhBC,EAAUF,EAAKG,cAAcC,MAC9BC,MAAK,SAACC,EAAGC,GAAJ,OAAWN,EAAWK,EAAEE,KAAKC,MAAQR,EAAWM,EAAEC,KAAKC,OAASH,EAAEE,KAAKE,KAAKC,cAAcJ,EAAEC,KAAKE,SACtGE,KAAI,SAACC,GAAD,OACH,yBAAKC,IAAG,GAAKD,EAAML,KAAKE,KAAQK,UAAU,uBAC1C,6BACE,kBAAC,IAAD,CAAKC,MAAOH,EAAML,KAAKS,WAAWC,gBAAgBF,MAAOD,UAAU,uBAErE,yBAAKA,UAAU,oBACb,2BAAIF,EAAML,KAAKE,OAEjB,yBAAKK,UAAU,oBACZF,EAAML,KAAKC,UAIdU,EACF,yBAAKJ,UAAU,cACb,kBAAC,IAAD,CAAKC,MAAOhB,EAAKoB,YAAYF,gBAAgBF,MAAOD,UAAU,2CAG9DM,EACF,yBAAKN,UAAU,cACb,uBAAGA,UAAU,mBAAb,6XACA,uBAAGA,UAAU,mBAAb,kTAGJ,OAAQ,6BACN,kBAAC,IAAD,CAAKO,MAAM,UACX,kBAAC,IAAD,CACEA,MACE,wCAAa,0BAAMP,UAAU,cAAhB,QAEfQ,SAAS,8IACTC,QACE,8BACE,kBAAC,OAAD,CAAMC,GAAG,iBAAiBV,UAAU,sEAApC,cAGJW,WAAW,sBAEb,yBAAKX,UAAU,YAAYY,GAAG,WAC5B,kBAAC,IAAD,CAASL,MAAM,8BAA8BC,SAAS,aACtD,yBAAKR,UAAU,2CACZI,EACAE,GAEH,yBAAKN,UAAU,0BACZI,EACAE,GAEH,yBAAKN,UAAU,wBAEjB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAASQ,SAAS,cAAcK,UAAU,aAAaC,UAAU,2BACjE,wBAAId,UAAU,0BAAyB,uOAA4M,0BAAMA,UAAU,cAAhB,eAA5M,iCAAyR,0BAAMA,UAAU,cAAhB,oCAAzR,QAEzC,yBAAKA,UAAU,wBAEjB,yBAAKA,UAAU,YAAYY,GAAG,QAC5B,kBAAC,IAAD,CAASL,MAAM,oBAAoBC,SAAS,aAC3CO,YAAQ5B,EAAS,IAEpB,kBAAC,IAAD,QAIG,IAAM6B,EAAK,a,oFCnGlB,6CAiBeC,IAbC,SAAC,GAAD,IACdV,EADc,EACdA,MACAC,EAFc,EAEdA,SACAK,EAHc,EAGdA,UACAC,EAJc,EAIdA,UAJc,OAMd,yBAAKd,UAAU,sBACb,uBAAGA,UAAS,GAAKa,GAAcL,GAC/B,wBAAIR,UAAS,GAAKa,GAAcN,GAChC,wBAAIP,UAAS,qBAAsBc,GAAwB,+B,kCCb/D,yDAiCeI,IA5BA,SAAC,GAAD,EACbjC,KADa,IAEbsB,EAFa,EAEbA,MACAC,EAHa,EAGbA,SACAC,EAJa,EAIbA,QACAE,EALa,EAKbA,WALa,OAOb,6BACE,kBAAC,IAAD,CAAQQ,UAAU,IAClB,yBAAKnB,UAAS,eAAgBW,GAA0B,wBACtD,yBAAKX,UAAU,aACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,WACb,4BAAKO,IAEP,yBAAKP,UAAU,WACb,4BAAKQ,IAEP,yBAAKR,UAAU,8BACZS,IAGL,iC,2ICzBR,SAASW,EAASC,EAAMC,GACtB,GAAID,EAAKC,OAASA,EAAS,EAEzB,OAAOD,EAAKE,UAAU,EAAGD,GAAU,MAC9B,GAAID,EAAKC,OAASA,EAAQ,CAI/B,IAAIE,EAAO,IAAOC,OAAO,GAEzB,OAAOJ,GAAO,IAAIG,GAAOC,QAAQH,EAASD,EAAKC,QAAUE,EAAKF,OAD7C,KAGjB,OAAOD,EAIX,SAASN,EAAQW,EAAUC,GAEzB,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAAIH,EAASJ,OAAQO,GAAKF,EACxCC,EAAKE,KACH,yBAAK9B,UAAU,OACZ0B,EAASK,MAAMF,EAAGA,EAAIF,KAI7B,OAAOC","file":"component---src-pages-about-js-221f1231fecd527dec0b.js","sourcesContent":["import React from 'react'\nimport {\n  Link,\n  graphql\n} from 'gatsby'\nimport Img from 'gatsby-image'\nimport SEO from '../components/seo.js'\nimport Header from '../components/header.js'\nimport Divider from '../components/divider.js'\nimport Footer from '../components/footer.js'\nimport {\n  gridify\n} from '../util/styling.js'\nimport '../styles/pages.css'\nimport '../../node_modules/materialize-css/dist/css/materialize.min.css'\n\nexport default ({\n  data\n}) => {\n  const priorities = {\n    'President': 0,\n    'VP Operations': 1,\n    'VP External': 2,\n    'VP Technology': 3,\n    'VP Projects': 4,\n    'UI/UX Design Lead': 5,\n    'Project Manager': 6,\n    'Developer': 7,\n    'UI/UX Designer': 8,\n  };\n  // Member information is stored in data.allTseMembers\n  // This is fetched using a GraphQL query that maps to the tritonse-source-firestore plugin\n  let members = data.allTseMembers.edges\n    .sort((a, b) => (priorities[a.node.role] - priorities[b.node.role] || a.node.name.localeCompare(b.node.name)))\n    .map((value) => (\n      <div key={`${value.node.name}`} className=\"col l2 m4 s6 center\">\n      <div>\n        <Img fluid={value.node.image_node.childImageSharp.fluid} className=\"tse-profile-image\"></Img>\n      </div>\n      <div className=\"tse-profile-name\">\n        <b>{value.node.name}</b>\n      </div>\n      <div className=\"tse-profile-role\">\n        {value.node.role} \n      </div>\n    </div>\n    ));\n  let history_left = (\n    <div className=\"col l6 s12\">\n      <Img fluid={data.programming.childImageSharp.fluid} className=\"tse-generic-image tse-highlight-image\"></Img>\n    </div>\n  );\n  let history_right = (\n    <div className=\"col l6 s12\">\n      <p className=\"tse-text-medium\">In Spring of 2017, a group of passionate students banded together to form Triton Software Engineering. They saw a huge problem: nonprofits had little to no resources to procure professional web and technical development services. By providing a venue for both student engineers and nonprofits to connect, they hoped to foster growth in both social good and technical expertise.</p>\n      <p className=\"tse-text-medium\">We believe that technology should be utilized to better the community. Something as simple as a sleek, static, and easy-to-use website or as complicated as  a mobile app to track donations to your organizations can have a huge impact on an organization of any size. Let us help you help the community.</p>\n    </div>\n  );\n  return (<div>\n    <SEO title=\"About\"/>\n    <Header\n      title={\n        <span>We Are <span className=\"amber-text\">TSE</span></span>\n      }\n      subtitle=\"We're an organization of engineers, designers, and problem solvers offering pro-bono technical and web development services for nonprofits.\"\n      buttons={\n        <span>\n          <Link to=\"/about#history\" className=\"waves-effect waves-light btn-large blue darken-4 tse-header-button\">Read More</Link>\n        </span>\n      }\n      background='tse-header-laptop'\n    />\n    <div className=\"container\" id=\"history\">\n      <Divider title=\"Strong Mind, Stronger Heart\" subtitle=\"ABOUT US\"/>\n      <div className=\"row valign-wrapper hide-on-med-and-down\">\n        {history_left}     \n        {history_right}     \n      </div>\n      <div className=\"row hide-on-large-only\">\n        {history_left}     \n        {history_right}     \n      </div>\n      <div className=\"tse-padding-medium\"></div>\n    </div>\n    <div className=\"blue darken-3\">\n      <div className=\"container\">\n        <Divider subtitle=\"OUR MISSION\" textColor=\"white-text\" lineColor=\"tse-divider-line-white\"/>\n        <h5 className=\"white-text tse-mission\"><b>\"Triton Software Engineering (TSE) is a multidisciplinary student organization at UC San Diego. We partner with nonprofits to design and develop software, websites and mobile applications pro-bono for <span className=\"amber-text\">social good</span>, while giving our developers <span className=\"amber-text\">practical, real world experience</span>.\"</b></h5>\n      </div>\n      <div className=\"tse-padding-medium\"></div>\n    </div>\n    <div className=\"container\" id=\"team\">\n      <Divider title=\"Who's Doing What?\" subtitle=\"THE TEAM\"/>\n      {gridify(members, 6)}\n    </div>\n    <Footer/>\n  </div>)\n}\n\nexport const query = graphql `\n  query {\n    allTseMembers {\n      edges {\n        node {\n          name\n          role\n          image\n          image_node {\n            ...FluidImage\n          }\n        }\n      }\n    }\n    programming: file(relativePath: { eq: \"generic-programming.png\" }) {\n      ...FluidImage\n    }\n  }\n`\n","import React from 'react'\nimport '../styles/divider.css'\nimport '../../node_modules/materialize-css/dist/css/materialize.min.css'\n\nconst Divider = ({\n  title,\n  subtitle,\n  textColor,\n  lineColor\n}) => (\n  <div className=\"center tse-divider\">\n    <p className={`${textColor}`}>{subtitle}</p>\n    <h3 className={`${textColor}`}>{title}</h3>\n    <hr className={`tse-divider-line ${lineColor ? lineColor : 'tse-divider-line-amber'}`}/>\n  </div>\n)\n\nexport default Divider;\n","import React from 'react'\nimport Navbar from '../components/navbar.js'\nimport '../styles/header.css'\nimport '../../node_modules/materialize-css/dist/css/materialize.min.css'\n\nconst Header = ({\n  data,\n  title,\n  subtitle,\n  buttons,\n  background\n}) => (\n  <div>\n    <Navbar gradient={true}/>\n    <div className={`tse-header ${background ? background : 'tse-header-gradient'}`}>\n      <div className=\"container\">\n        <div className=\"row center white-text\">\n          <div className=\"col s12\">\n            <h1>{title}</h1>\n          </div>\n          <div className=\"col s12\">\n            <h5>{subtitle}</h5>\n          </div>\n          <div className=\"col s12 tse-header-buttons\">\n            {buttons}\n          </div>\n        </div>\n        <p></p>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Header;\n","import React from 'react'\n\nfunction condense(text, length) {\n  if (text.length > length - 3) {\n    // If the string is too long, trim it and add ellipses at the end\n    return text.substring(0, length) + '...';\n  } else if (text.length < length) {\n    // HACKY: If the length of the text is too short, we pad it with invisible non-breaking spaces\n    // These spaces ensure that the card is padded vertically to the correct size\n    // Chances are descriptions are long enough but this is a fallback measure to keep card heights identical \n    let nbsp = \"\\xa0\".repeat(4);\n    let nbsp_scale = 1.7;\n    return text + ` ${nbsp}`.repeat((length - text.length) / nbsp.length * nbsp_scale);\n  } else {\n    return text;\n  }\n}\n\nfunction gridify(elements, num_columns) {\n  let rows = [];\n  for (let i = 0; i < elements.length; i += num_columns) {\n    rows.push(\n      <div className=\"row\">\n        {elements.slice(i, i + num_columns)}\n      </div>\n    );\n  }\n  return rows;\n}\n\nexport {\n  condense,\n  gridify\n};\n"],"sourceRoot":""}