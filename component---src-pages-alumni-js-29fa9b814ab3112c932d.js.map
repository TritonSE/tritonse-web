{"version":3,"sources":["webpack:///./src/components/members.js","webpack:///./src/components/divider.js","webpack:///./src/pages/alumni.js","webpack:///./src/util/styling.js"],"names":["Members","data","members","priorities","President","Developer","elements","sort","a","b","node","role","name","localeCompare","map","value","key","className","fluid","image","childImageSharp","gridify","Divider","title","subtitle","textColor","lineColor","caption","classes","allTseMembers","edges","forEach","member","alumni","push","Object","keys","reverse","year","condense","text","length","substring","nbsp","repeat","num_columns","rows","i","slice"],"mappings":"oHAAA,8EA2CeA,IArCC,SAAC,GAAsB,EAApBC,KAAqB,IAAfC,EAAc,EAAdA,QACjBC,EAAa,CACjBC,UAAW,EACX,gBAAiB,EACjB,cAAe,EACf,gBAAiB,EACjB,cAAe,EACf,YAAa,EACb,gBAAiB,EACjB,iBAAkB,EAClB,kBAAmB,EACnB,iBAAkB,EAClBC,UAAW,IAEPC,EAAWJ,EACdK,MACC,SAACC,EAAGC,GAAJ,OACEN,EAAWK,EAAEE,KAAKC,MAAQR,EAAWM,EAAEC,KAAKC,OAC5CH,EAAEE,KAAKE,KAAKC,cAAcJ,EAAEC,KAAKE,SAEpCE,KAAI,SAAAC,GAAK,OACR,yBAAKC,IAAG,GAAKD,EAAML,KAAKE,KAAQK,UAAU,uBACxC,6BACE,kBAAC,IAAD,CACEC,MAAOH,EAAML,KAAKS,MAAMC,gBAAgBF,MACxCD,UAAU,uBAGd,yBAAKA,UAAU,oBACb,2BAAIF,EAAML,KAAKE,OAEjB,yBAAKK,UAAU,oBAAoBF,EAAML,KAAKC,UAGpD,OAAO,6BAAMU,YAAQf,EAAU,M,kCCxCjC,uDAkBegB,IAbC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,UAAWC,EAA1C,EAA0CA,QAA1C,OACd,yBAAKV,UAAU,sBACb,uBAAGA,UAAS,GAAKQ,GAAcD,GAC/B,wBAAIP,UAAS,GAAKQ,GAAcF,GAChC,wBACEN,UAAS,qBACPS,GAAwB,4BAG5B,uBAAGT,UAAS,uBAAyBQ,GAAcE,M,kCCdvD,0HAWe,sBAAe,IAAZ1B,EAAW,EAAXA,KACV2B,EAAU,GAChB3B,EAAK4B,cAAcC,MAAMC,SAAQ,SAAAC,GAC3BA,EAAOtB,KAAKuB,UAAUL,EACxBA,EAAQI,EAAOtB,KAAKuB,QAAQC,KAAKF,GAEjCJ,EAAQI,EAAOtB,KAAKuB,QAAU,CAACD,MAGnC,IAAM1B,EAAW,GAoBjB,OAnBA6B,OAAOC,KAAKR,GACTrB,OACA8B,UACAN,SAAQ,SAASO,GAChB,GAAa,OAATA,IAA2B,IAAVA,EAArB,CAGA,IAAMpC,EAAU0B,EAAQU,GACxBhC,EAAS4B,KACP,yBAAKjB,UAAU,aACb,wCACW,2BAAIqB,IAEf,yBAAKrB,UAAU,yBACf,kBAAC,IAAD,CAASf,QAASA,IAClB,yBAAKe,UAAU,gCAKrB,6BACE,kBAAC,IAAD,CAAKM,MAAM,WACX,kBAAC,IAAD,MACA,yBAAKN,UAAU,aACb,kBAAC,IAAD,CACEM,MAAO,+CACPC,SAAS,mBACTC,UAAU,YACVC,UAAU,kCAId,yBAAKT,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,uBACf,wBAAIA,UAAU,cAAd,+OAMA,yBAAKA,UAAU,yBAGnB,yBAAKA,UAAU,uBAEdX,EACD,kBAAC,IAAD,S,oCCpEN,6FAEA,SAASiC,EAASC,EAAMC,GACtB,GAAID,EAAKC,OAASA,EAAS,EAEzB,OAAOD,EAAKE,UAAU,EAAGD,GAAU,MAC9B,GAAID,EAAKC,OAASA,EAAQ,CAI/B,IAAIE,EAAO,IAAOC,OAAO,GAEzB,OACEJ,GACA,IAAIG,GAAOC,QAASH,EAASD,EAAKC,QAAUE,EAAKF,OAHlC,KAMjB,OAAOD,EAIX,SAASnB,EAAQf,EAAUuC,GAEzB,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAAIzC,EAASmC,OAAQM,GAAKF,EACxCC,EAAKZ,KAAK,yBAAKjB,UAAU,OAAOX,EAAS0C,MAAMD,EAAGA,EAAIF,KAExD,OAAOC","file":"component---src-pages-alumni-js-29fa9b814ab3112c932d.js","sourcesContent":["import React from \"react\";\nimport Img from \"gatsby-image\";\nimport { gridify } from \"../util/styling.js\";\nimport \"../styles/pages.css\";\nimport \"../../node_modules/materialize-css/dist/css/materialize.min.css\";\n\nconst Members = ({ data, members }) => {\n  const priorities = {\n    President: 0,\n    \"VP Operations\": 1,\n    \"VP External\": 2,\n    \"VP Technology\": 3,\n    \"VP Projects\": 4,\n    \"VP Design\": 5,\n    \"Outreach Lead\": 6,\n    \"Marketing Lead\": 7,\n    \"Project Manager\": 8,\n    \"UI/UX Designer\": 9,\n    Developer: 10\n  };\n  const elements = members\n    .sort(\n      (a, b) =>\n        priorities[a.node.role] - priorities[b.node.role] ||\n        a.node.name.localeCompare(b.node.name)\n    )\n    .map(value => (\n      <div key={`${value.node.name}`} className=\"col l2 m4 s6 center\">\n        <div>\n          <Img\n            fluid={value.node.image.childImageSharp.fluid}\n            className=\"tse-profile-image\"\n          ></Img>\n        </div>\n        <div className=\"tse-profile-name\">\n          <b>{value.node.name}</b>\n        </div>\n        <div className=\"tse-profile-role\">{value.node.role}</div>\n      </div>\n    ));\n  return <div>{gridify(elements, 6)}</div>;\n};\n\nexport default Members;\n","import React from \"react\";\nimport \"../styles/divider.css\";\nimport \"../styles/colors.css\";\nimport \"../../node_modules/materialize-css/dist/css/materialize.min.css\";\n\nconst Divider = ({ title, subtitle, textColor, lineColor, caption }) => (\n  <div className=\"center tse-divider\">\n    <p className={`${textColor}`}>{subtitle}</p>\n    <h3 className={`${textColor}`}>{title}</h3>\n    <hr\n      className={`tse-divider-line ${\n        lineColor ? lineColor : \"tse-divider-line-amber\"\n      }`}\n    />\n    <p className={`tse-divider-caption ${textColor}`}>{caption}</p>\n  </div>\n);\n\nexport default Divider;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport SEO from \"../components/seo.js\";\nimport Navbar from \"../components/navbar.js\";\nimport Divider from \"../components/divider.js\";\nimport Footer from \"../components/footer.js\";\nimport Members from \"../components/members.js\";\nimport \"../styles/pages.css\";\nimport \"../styles/colors.css\";\nimport \"../../node_modules/materialize-css/dist/css/materialize.min.css\";\n\nexport default ({ data }) => {\n  const classes = {};\n  data.allTseMembers.edges.forEach(member => {\n    if (member.node.alumni in classes) {\n      classes[member.node.alumni].push(member);\n    } else {\n      classes[member.node.alumni] = [member];\n    }\n  });\n  const elements = [];\n  Object.keys(classes)\n    .sort()\n    .reverse()\n    .forEach(function(year) {\n      if (year === \"-1\" || year === -1) {\n        return;\n      }\n      const members = classes[year];\n      elements.push(\n        <div className=\"container\">\n          <h5>\n            Class of <b>{year}</b>\n          </h5>\n          <div className=\"tse-separation-small\"></div>\n          <Members members={members} />\n          <div className=\"tse-separation-medium\"></div>\n        </div>\n      );\n    });\n  return (\n    <div>\n      <SEO title=\"Alumni\" />\n      <Navbar />\n      <div className=\"container\">\n        <Divider\n          title={<span>Who Did What?</span>}\n          subtitle=\"GRADUATED ALUMNI\"\n          textColor=\"navy-text\"\n          lineColor=\"tse-divider-line-dark-yellow\"\n        />\n      </div>\n\n      <div className=\"navy\">\n        <div className=\"container\">\n          <div className=\"tse-padding-medium\"></div>\n          <h5 className=\"white-text\">\n            We thank all of our alumni for the hard work & dedication that they\n            have poured into TSE throughout their time at UCSD. Listed below is\n            each member, their graduation year and the highest position they\n            have held within the organization.\n          </h5>\n          <div className=\"tse-padding-medium\"></div>\n        </div>\n      </div>\n      <div className=\"tse-padding-medium\"></div>\n\n      {elements}\n      <Footer />\n    </div>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allTseMembers {\n      edges {\n        node {\n          name\n          role\n          image {\n            ...FluidImage\n          }\n          alumni\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nfunction condense(text, length) {\n  if (text.length > length - 3) {\n    // If the string is too long, trim it and add ellipses at the end\n    return text.substring(0, length) + \"...\";\n  } else if (text.length < length) {\n    // HACKY: If the length of the text is too short, we pad it with invisible non-breaking spaces\n    // These spaces ensure that the card is padded vertically to the correct size\n    // Chances are descriptions are long enough but this is a fallback measure to keep card heights identical\n    let nbsp = \"\\xa0\".repeat(4);\n    let nbsp_scale = 1.7;\n    return (\n      text +\n      ` ${nbsp}`.repeat(((length - text.length) / nbsp.length) * nbsp_scale)\n    );\n  } else {\n    return text;\n  }\n}\n\nfunction gridify(elements, num_columns) {\n  let rows = [];\n  for (let i = 0; i < elements.length; i += num_columns) {\n    rows.push(<div className=\"row\">{elements.slice(i, i + num_columns)}</div>);\n  }\n  return rows;\n}\n\nexport { condense, gridify };\n"],"sourceRoot":""}