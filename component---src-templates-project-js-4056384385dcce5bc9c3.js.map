{"version":3,"sources":["webpack:///./src/components/divider.js","webpack:///./src/templates/project.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.repeat.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-repeat.js","webpack:///./src/util/styling.js"],"names":["Divider","title","subtitle","textColor","lineColor","caption","className","project","data","tseProjects","jumbo_left","condense","class","href","github","jumbo_right","fluid","image","childImageSharp","gradient","dangerouslySetInnerHTML","__html","overview","query","$export","P","repeat","toInteger","defined","module","exports","count","str","String","this","res","n","Infinity","RangeError","text","length","substring","nbsp","gridify","elements","num_columns","rows","i","push","slice"],"mappings":"8IAAA,uDAoBeA,IAfC,SAAC,GAAD,IACdC,EADc,EACdA,MACAC,EAFc,EAEdA,SACAC,EAHc,EAGdA,UACAC,EAJc,EAIdA,UACAC,EALc,EAKdA,QALc,OAOd,yBAAKC,UAAU,sBACb,uBAAGA,UAAS,GAAKH,GAAcD,GAC/B,wBAAII,UAAS,GAAKH,GAAcF,GAChC,wBAAIK,UAAS,qBAAsBF,GAAwB,4BAC3D,uBAAGE,UAAS,uBAAyBH,GAAcE,M,kCChBvD,qLAgBe,sBAER,IACDE,EADA,EADJC,KAEmBC,YACfC,EACF,yBAAKJ,UAAU,cACb,wBAAIA,UAAU,cAAcC,EAAQN,OACpC,wBAAIK,UAAU,cAAcK,YAASJ,EAAQL,SAAU,MACvD,yBAAKU,MAAM,iCACT,uBAAGN,UAAU,0CAA0CO,KAAMN,EAAQO,QAArE,mBAEE,uBAAGR,UAAU,wBAAb,WAIJS,EACF,yBAAKT,UAAU,cACb,kBAAC,IAAD,CAAKU,MAAOT,EAAQU,MAAMC,gBAAgBF,MAAOV,UAAU,oDAG/D,OACE,6BACE,kBAAC,IAAD,CAAKL,MAAOM,EAAQN,QACpB,kBAAC,IAAD,CAAQkB,UAAU,IAClB,yBAAKb,UAAU,0CACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,2CACZI,EACAK,GAEH,yBAAKT,UAAU,0BACZI,EACAK,KAIP,yBAAKH,MAAM,aACT,kBAAC,IAAD,CAASX,MAAM,6BAA6BC,SAAS,WAAWC,UAAU,YAAYC,UAAU,iCAChG,uBAAGE,UAAU,4BAA4Bc,wBAAyB,CAACC,OAAQd,EAAQe,aAErF,kBAAC,IAAD,QAKC,IAAMC,EAAK,c,qBC7DlB,IAAIC,EAAU,EAAQ,QAEtBA,EAAQA,EAAQC,EAAG,SAAU,CAE3BC,OAAQ,EAAQ,W,kCCHlB,IAAIC,EAAY,EAAQ,QACpBC,EAAU,EAAQ,QAEtBC,EAAOC,QAAU,SAAgBC,GAC/B,IAAIC,EAAMC,OAAOL,EAAQM,OACrBC,EAAM,GACNC,EAAIT,EAAUI,GAClB,GAAIK,EAAI,GAAKA,GAAKC,IAAU,MAAMC,WAAW,2BAC7C,KAAMF,EAAI,GAAIA,KAAO,KAAOJ,GAAOA,GAAc,EAAJI,IAAOD,GAAOH,GAC3D,OAAOG,I,2ICRT,SAASxB,EAAS4B,EAAMC,GACtB,GAAID,EAAKC,OAASA,EAAS,EAEzB,OAAOD,EAAKE,UAAU,EAAGD,GAAU,MAC9B,GAAID,EAAKC,OAASA,EAAQ,CAI/B,IAAIE,EAAO,IAAOhB,OAAO,GAEzB,OAAOa,GAAO,IAAIG,GAAOhB,QAAQc,EAASD,EAAKC,QAAUE,EAAKF,OAD7C,KAGjB,OAAOD,EAIX,SAASI,EAAQC,EAAUC,GAEzB,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAAIH,EAASJ,OAAQO,GAAKF,EACxCC,EAAKE,KACH,yBAAK1C,UAAU,OACZsC,EAASK,MAAMF,EAAGA,EAAIF,KAI7B,OAAOC","file":"component---src-templates-project-js-4056384385dcce5bc9c3.js","sourcesContent":["import React from 'react'\nimport '../styles/divider.css'\nimport '../styles/colors.css'\nimport '../../node_modules/materialize-css/dist/css/materialize.min.css'\n\nconst Divider = ({\n  title,\n  subtitle,\n  textColor,\n  lineColor,\n  caption,\n}) => (\n  <div className=\"center tse-divider\">\n    <p className={`${textColor}`}>{subtitle}</p>\n    <h3 className={`${textColor}`}>{title}</h3>\n    <hr className={`tse-divider-line ${lineColor ? lineColor : 'tse-divider-line-amber'}`}/>\n    <p className={`tse-divider-caption ${textColor}`}>{caption}</p>\n  </div>\n)\n\nexport default Divider;\n","import React from \"react\"\nimport {\n  graphql\n} from 'gatsby'\nimport Img from 'gatsby-image'\nimport SEO from \"../components/seo.js\"\nimport Navbar from \"../components/navbar.js\"\nimport Divider from \"../components/divider.js\"\nimport Footer from \"../components/footer.js\"\nimport {\n  condense\n} from '../util/styling.js'\nimport '../styles/header.css'\nimport '../styles/pages.css'\nimport '../../node_modules/materialize-css/dist/css/materialize.min.css'\n\nexport default ({\n  data\n}) => {\n  let project = data.tseProjects;\n  let jumbo_left = (\n    <div className=\"col l6 s12\">\n      <h2 className=\"white-text\">{project.title}</h2>\n      <h5 className=\"white-text\">{condense(project.subtitle, 250)}</h5>\n      <div class=\"tse-header-buttons white-text\">\n        <a className=\"waves-effect waves-light btn-large navy\" href={project.github}>\n          Visit Our GitHub\n          <i className=\"material-icons right\">code</i>\n        </a>\n      </div>\n    </div>);\n  let jumbo_right = (\n    <div className=\"col l6 s12\">\n      <Img fluid={project.image.childImageSharp.fluid} className=\"tse-project-template-image tse-highlight-image\"></Img>\n    </div>\n  );\n  return (\n    <div>\n      <SEO title={project.title}/>\n      <Navbar gradient={true}/>\n      <div className=\"tse-header-project tse-header-gradient\">\n        <div className=\"container\">\n          <div className=\"row valign-wrapper hide-on-med-and-down\">\n            {jumbo_left}\n            {jumbo_right}\n          </div>\n          <div className=\"row hide-on-large-only\">\n            {jumbo_left}\n            {jumbo_right}\n          </div>\n        </div>\n      </div>\n      <div class=\"container\">\n        <Divider title=\"What's This Project About?\" subtitle=\"OVERVIEW\" textColor=\"navy-text\" lineColor=\"tse-divider-line-dark-yellow\"/>\n        <p className=\"tse-text-medium navy-text\" dangerouslySetInnerHTML={{__html: project.overview}}/>\n      </div>\n      <Footer/>\n    </div>\n  )\n}\n\nexport const query = graphql `\n  query($id: String!) {\n    tseProjects(id: { eq: $id }) {\n      title\n      subtitle\n      overview\n      github\n      image {\n        ...FluidImage\n      }\n    }\n  }\n`\n","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n","import React from 'react'\n\nfunction condense(text, length) {\n  if (text.length > length - 3) {\n    // If the string is too long, trim it and add ellipses at the end\n    return text.substring(0, length) + '...';\n  } else if (text.length < length) {\n    // HACKY: If the length of the text is too short, we pad it with invisible non-breaking spaces\n    // These spaces ensure that the card is padded vertically to the correct size\n    // Chances are descriptions are long enough but this is a fallback measure to keep card heights identical \n    let nbsp = \"\\xa0\".repeat(4);\n    let nbsp_scale = 1.7;\n    return text + ` ${nbsp}`.repeat((length - text.length) / nbsp.length * nbsp_scale);\n  } else {\n    return text;\n  }\n}\n\nfunction gridify(elements, num_columns) {\n  let rows = [];\n  for (let i = 0; i < elements.length; i += num_columns) {\n    rows.push(\n      <div className=\"row\">\n        {elements.slice(i, i + num_columns)}\n      </div>\n    );\n  }\n  return rows;\n}\n\nexport {\n  condense,\n  gridify\n};\n"],"sourceRoot":""}