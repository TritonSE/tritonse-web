{"version":3,"sources":["webpack:///./src/components/divider.js","webpack:///./src/templates/project.js","webpack:///./src/components/navbar.js","webpack:///./src/components/footer.js","webpack:///./src/util/styling.js"],"names":["Divider","title","subtitle","textColor","lineColor","caption","className","project","data","tseProjects","jumbo_left","condense","class","href","github","jumbo_right","fluid","image","childImageSharp","gradient","dangerouslySetInnerHTML","__html","overview","Navbar","componentDidMount","initMaterialize","dropdown","document","querySelectorAll","M","Dropdown","init","coverTrigger","render","this","props","foreground","background","logo","ylogo","blogo","id","to","data-target","React","Component","query","Footer","text","length","substring","nbsp","repeat","gridify","elements","num_columns","rows","i","push","slice"],"mappings":"4LAAA,uDAkBeA,IAbC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,UAAWC,EAA1C,EAA0CA,QAA1C,OACd,yBAAKC,UAAU,sBACb,uBAAGA,UAAS,GAAKH,GAAcD,GAC/B,wBAAII,UAAS,GAAKH,GAAcF,GAChC,wBACEK,UAAS,qBACPF,GAAwB,4BAG5B,uBAAGE,UAAS,uBAAyBH,GAAcE,M,kCCdvD,+IAYe,sBAAe,IACxBE,EADuB,EAAXC,KACGC,YACfC,EACF,yBAAKJ,UAAU,cACb,wBAAIA,UAAU,cAAcC,EAAQN,OACpC,wBAAIK,UAAU,cAAcK,YAASJ,EAAQL,SAAU,MACvD,yBAAKU,MAAM,iCACT,uBACEN,UAAU,0CACVO,KAAMN,EAAQO,QAFhB,mBAKE,uBAAGR,UAAU,wBAAb,WAKJS,EACF,yBAAKT,UAAU,cACb,kBAAC,IAAD,CACEU,MAAOT,EAAQU,MAAMC,gBAAgBF,MACrCV,UAAU,oDAIhB,OACE,6BACE,kBAAC,IAAD,CAAKL,MAAOM,EAAQN,QACpB,kBAAC,IAAD,CAAQkB,UAAU,IAClB,yBAAKb,UAAU,0CACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,2CACZI,EACAK,GAEH,yBAAKT,UAAU,0BACZI,EACAK,KAIP,yBAAKH,MAAM,aACT,kBAAC,IAAD,CACEX,MAAM,6BACNC,SAAS,WACTC,UAAU,YACVC,UAAU,iCAEZ,uBACEE,UAAU,4BACVc,wBAAyB,CAAEC,OAAQd,EAAQe,aAG/C,kBAAC,IAAD,S,2ICzDAC,G,wIACJC,kBAAA,WACEC,cACA,IAAIC,EAAWC,SAASC,iBAAiB,qBAKzCC,EAAEC,SAASC,KAAKL,EAJF,CACZM,cAAc,K,EAMlBC,OAAA,WAAU,IAAD,EACoBC,KAAKC,MAAxB3B,EADD,EACCA,KAAMW,EADP,EACOA,SACRiB,EAAajB,EAAW,aAAe,YACvCkB,EAAalB,EAAW,OAAS,QACjCmB,EAAOnB,EACTX,EAAK+B,MAAMrB,gBAAgBF,MAC3BR,EAAKgC,MAAMtB,gBAAgBF,MAC/B,OACE,6BACE,wBACEyB,GAAG,sBACHnC,UAAS,oBAAsB+B,GAE/B,4BACE,uBAAGxB,KAAK,aACN,0BAAMP,UAAS,4BAA8B8B,GAA7C,cAKJ,4BACE,uBAAGvB,KAAK,eACN,0BAAMP,UAAS,4BAA8B8B,GAA7C,iBAMN,yBAAK9B,UAAW+B,GACd,yBAAK/B,UAAU,yBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,kBAAC,OAAD,CAAMoC,GAAG,KACP,kBAAC,IAAD,CAAK1B,MAAOsB,EAAMhC,UAAU,sBAGhC,yBAAKA,UAAU,kCACb,uBACEO,KAAK,KACL8B,cAAY,kBACZrC,UAAS,yBAA2B8B,GAEpC,uBAAG9B,UAAU,kBAAb,UAGJ,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SACZ,4BACE,kBAAC,OAAD,CAAMoC,GAAG,KACP,0BAAMpC,UAAS,mBAAqB8B,GAApC,UAKJ,4BACE,kBAAC,OAAD,CAAMM,GAAG,UACP,0BAAMpC,UAAS,mBAAqB8B,GAApC,WAKJ,4BACE,kBAAC,OAAD,CAAMM,GAAG,aACP,0BAAMpC,UAAS,mBAAqB8B,GAApC,cAKJ,4BACE,uBACE9B,UAAU,mBACVO,KAAK,KACL8B,cAAY,uBAEZ,0BAAMrC,UAAS,mBAAqB8B,GAApC,kBAUd,wBAAI9B,UAAS,WAAa+B,EAAcI,GAAG,mBACzC,4BACE,uBAAG5B,KAAK,IAAIP,UAAW8B,GACrB,0BAAM9B,UAAU,mBAAhB,UAGJ,4BACE,uBAAGO,KAAK,SAASP,UAAW8B,GAC1B,0BAAM9B,UAAU,mBAAhB,WAGJ,4BACE,uBAAGO,KAAK,YAAYP,UAAW8B,GAC7B,0BAAM9B,UAAU,mBAAhB,cAGJ,4BACE,uBAAGO,KAAK,SAASP,UAAW8B,GAC1B,0BAAM9B,UAAU,mBAAhB,gB,GAjHOsC,IAAMC,YA0HZ,aAAAV,GAAK,OAClB,kBAAC,cAAD,CACEW,MAAK,aAULb,OAAQ,SAAAzB,GAAI,OAAI,kBAACe,EAAD,eAAQf,KAAMA,GAAU2B,S,oCC9I5C,0DAQMY,GARN,wCAQe,SAAC,GAAD,IAAGvC,EAAH,EAAGA,KAAH,OACb,6BACE,yBAAKF,UAAU,0BACf,4BAAQA,UAAU,oBAChB,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,OAAD,CAAMoC,GAAG,KACP,kBAAC,IAAD,CACE1B,MAAOR,EAAK8B,KAAKpB,gBAAgBF,MACjCV,UAAU,qBAGd,uBAAGA,UAAU,4BAAb,gBACA,uBAAGO,KAAK,0BAA0BP,UAAU,qBAC1C,uBAAGA,UAAU,oBAEf,uBACEO,KAAK,0DACLP,UAAU,qBAEV,uBAAGA,UAAU,oBAEf,uBAAGO,KAAK,8BAA8BP,UAAU,qBAC9C,uBAAGA,UAAU,mBAGjB,yBAAKA,UAAU,cACb,wBAAIA,UAAU,cAAd,WACA,4BACE,4BACE,kBAAC,OAAD,CAAMoC,GAAG,SAASpC,UAAU,mBAA5B,UAIF,4BACE,kBAAC,OAAD,CAAMoC,GAAG,YAAYpC,UAAU,mBAA/B,eAMN,yBAAKA,UAAU,cACb,wBAAIA,UAAU,cAAd,YACA,4BACE,4BACE,kBAAC,OAAD,CAAMoC,GAAG,YAAYpC,UAAU,mBAA/B,UAIF,4BACE,kBAAC,OAAD,CAAMoC,GAAG,gBAAgBpC,UAAU,mBAAnC,WAMN,yBAAKA,UAAU,cACb,wBAAIA,UAAU,cAAd,cACA,4BACE,4BACE,kBAAC,OAAD,CAAMoC,GAAG,cAAcpC,UAAU,mBAAjC,UAIF,4BACE,kBAAC,OAAD,CAAMoC,GAAG,kBAAkBpC,UAAU,mBAArC,aAQV,yBAAKA,UAAU,8BAKN,aAAA6B,GAAK,OAClB,kBAAC,cAAD,CACEW,MAAK,aAOLb,OAAQ,SAAAzB,GAAI,OAAI,kBAACuC,EAAD,eAAQvC,KAAMA,GAAU2B,S,2DChG5C,6FAEA,SAASxB,EAASqC,EAAMC,GACtB,GAAID,EAAKC,OAASA,EAAS,EAEzB,OAAOD,EAAKE,UAAU,EAAGD,GAAU,MAC9B,GAAID,EAAKC,OAASA,EAAQ,CAI/B,IAAIE,EAAO,IAAOC,OAAO,GAEzB,OACEJ,GACA,IAAIG,GAAOC,QAASH,EAASD,EAAKC,QAAUE,EAAKF,OAHlC,KAMjB,OAAOD,EAIX,SAASK,EAAQC,EAAUC,GAEzB,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAAIH,EAASL,OAAQQ,GAAKF,EACxCC,EAAKE,KAAK,yBAAKpD,UAAU,OAAOgD,EAASK,MAAMF,EAAGA,EAAIF,KAExD,OAAOC,I","file":"component---src-templates-project-js-3b68bd677c4f8aac1c2b.js","sourcesContent":["import React from \"react\";\nimport \"../styles/divider.css\";\nimport \"../styles/colors.css\";\nimport \"../../node_modules/materialize-css/dist/css/materialize.min.css\";\n\nconst Divider = ({ title, subtitle, textColor, lineColor, caption }) => (\n  <div className=\"center tse-divider\">\n    <p className={`${textColor}`}>{subtitle}</p>\n    <h3 className={`${textColor}`}>{title}</h3>\n    <hr\n      className={`tse-divider-line ${\n        lineColor ? lineColor : \"tse-divider-line-amber\"\n      }`}\n    />\n    <p className={`tse-divider-caption ${textColor}`}>{caption}</p>\n  </div>\n);\n\nexport default Divider;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport SEO from \"../components/seo.js\";\nimport Navbar from \"../components/navbar.js\";\nimport Divider from \"../components/divider.js\";\nimport Footer from \"../components/footer.js\";\nimport { condense } from \"../util/styling.js\";\nimport \"../styles/header.css\";\nimport \"../styles/pages.css\";\nimport \"../../node_modules/materialize-css/dist/css/materialize.min.css\";\n\nexport default ({ data }) => {\n  let project = data.tseProjects;\n  let jumbo_left = (\n    <div className=\"col l6 s12\">\n      <h2 className=\"white-text\">{project.title}</h2>\n      <h5 className=\"white-text\">{condense(project.subtitle, 250)}</h5>\n      <div class=\"tse-header-buttons white-text\">\n        <a\n          className=\"waves-effect waves-light btn-large navy\"\n          href={project.github}\n        >\n          Visit Our GitHub\n          <i className=\"material-icons right\">code</i>\n        </a>\n      </div>\n    </div>\n  );\n  let jumbo_right = (\n    <div className=\"col l6 s12\">\n      <Img\n        fluid={project.image.childImageSharp.fluid}\n        className=\"tse-project-template-image tse-highlight-image\"\n      ></Img>\n    </div>\n  );\n  return (\n    <div>\n      <SEO title={project.title} />\n      <Navbar gradient={true} />\n      <div className=\"tse-header-project tse-header-gradient\">\n        <div className=\"container\">\n          <div className=\"row valign-wrapper hide-on-med-and-down\">\n            {jumbo_left}\n            {jumbo_right}\n          </div>\n          <div className=\"row hide-on-large-only\">\n            {jumbo_left}\n            {jumbo_right}\n          </div>\n        </div>\n      </div>\n      <div class=\"container\">\n        <Divider\n          title=\"What's This Project About?\"\n          subtitle=\"OVERVIEW\"\n          textColor=\"navy-text\"\n          lineColor=\"tse-divider-line-dark-yellow\"\n        />\n        <p\n          className=\"tse-text-medium navy-text\"\n          dangerouslySetInnerHTML={{ __html: project.overview }}\n        />\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport const query = graphql`\n  query($id: String!) {\n    tseProjects(id: { eq: $id }) {\n      title\n      subtitle\n      overview\n      github\n      image {\n        ...FluidImage\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link, StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport { initMaterialize } from \"../util/init.js\";\nimport \"../styles/navbar.css\";\nimport \"../styles/colors.css\";\nimport \"../../node_modules/materialize-css/dist/css/materialize.min.css\";\n\nclass Navbar extends React.Component {\n  componentDidMount() {\n    initMaterialize();\n    let dropdown = document.querySelectorAll(\".dropdown-trigger\");\n    let options = {\n      coverTrigger: false\n    };\n    /* global M */\n    M.Dropdown.init(dropdown, options);\n  }\n\n  render() {\n    const { data, gradient } = this.props;\n    const foreground = gradient ? \"white-text\" : \"navy-text\";\n    const background = gradient ? \"navy\" : \"white\";\n    const logo = gradient\n      ? data.ylogo.childImageSharp.fluid\n      : data.blogo.childImageSharp.fluid;\n    return (\n      <div>\n        <ul\n          id=\"tse-navbar-dropdown\"\n          className={`dropdown-content ${background}`}\n        >\n          <li>\n            <a href=\"/students\">\n              <span className={`tse-navbar-dropdown-item ${foreground}`}>\n                Students\n              </span>\n            </a>\n          </li>\n          <li>\n            <a href=\"/nonprofits\">\n              <span className={`tse-navbar-dropdown-item ${foreground}`}>\n                Nonprofits\n              </span>\n            </a>\n          </li>\n        </ul>\n        <nav className={background}>\n          <div className=\"nav-wrapper container\">\n            <div className=\"row\">\n              <div className=\"col s6\">\n                <Link to=\"/\">\n                  <Img fluid={logo} className=\"tse-navbar-logo\"></Img>\n                </Link>\n              </div>\n              <div className=\"col s6 show-on-medium-and-down\">\n                <a\n                  href=\"#!\"\n                  data-target=\"tse-mobile-menu\"\n                  className={`sidenav-trigger right ${foreground}`}\n                >\n                  <i className=\"material-icons\">menu</i>\n                </a>\n              </div>\n              <div className=\"col s6 hide-on-med-and-down\">\n                <ul className=\"right\">\n                  <li>\n                    <Link to=\"/\">\n                      <span className={`tse-navbar-link ${foreground}`}>\n                        Home\n                      </span>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"/about\">\n                      <span className={`tse-navbar-link ${foreground}`}>\n                        About\n                      </span>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"/projects\">\n                      <span className={`tse-navbar-link ${foreground}`}>\n                        Projects\n                      </span>\n                    </Link>\n                  </li>\n                  <li>\n                    <a\n                      className=\"dropdown-trigger\"\n                      href=\"#!\"\n                      data-target=\"tse-navbar-dropdown\"\n                    >\n                      <span className={`tse-navbar-link ${foreground}`}>\n                        Connect\n                      </span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </nav>\n        <ul className={`sidenav ${background}`} id=\"tse-mobile-menu\">\n          <li>\n            <a href=\"/\" className={foreground}>\n              <span className=\"tse-text-medium\">Home</span>\n            </a>\n          </li>\n          <li>\n            <a href=\"/about\" className={foreground}>\n              <span className=\"tse-text-medium\">About</span>\n            </a>\n          </li>\n          <li>\n            <a href=\"/projects\" className={foreground}>\n              <span className=\"tse-text-medium\">Projects</span>\n            </a>\n          </li>\n          <li>\n            <a href=\"/apply\" className={foreground}>\n              <span className=\"tse-text-medium\">Connect</span>\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        ylogo: file(relativePath: { eq: \"logo-yellow.png\" }) {\n          ...FluidImage\n        }\n        blogo: file(relativePath: { eq: \"logo-blue.png\" }) {\n          ...FluidImage\n        }\n      }\n    `}\n    render={data => <Navbar data={data} {...props} />}\n  />\n);\n","import React from \"react\";\nimport { Link, StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport \"../styles/footer.css\";\nimport \"../styles/colors.css\";\nimport \"../../node_modules/materialize-css/dist/css/materialize.min.css\";\nimport \"../../node_modules/font-awesome/css/font-awesome.min.css\";\n\nconst Footer = ({ data }) => (\n  <div>\n    <div className=\"tse-footer-semicircle\"></div>\n    <footer className=\"page-footer navy\">\n      <div className=\"container navy\">\n        <div className=\"row\">\n          <div className=\"col l6 s12\">\n            <Link to=\"/\">\n              <Img\n                fluid={data.logo.childImageSharp.fluid}\n                className=\"tse-footer-logo\"\n              ></Img>\n            </Link>\n            <p className=\"grey-text text-lighten-4\">tse@ucsd.edu</p>\n            <a href=\"https://fb.com/tritonse\" className=\"tse-footer-social\">\n              <i className=\"fa fa-facebook\"></i>\n            </a>\n            <a\n              href=\"https://linkedin.com/company/tritonsoftwareengineering/\"\n              className=\"tse-footer-social\"\n            >\n              <i className=\"fa fa-linkedin\"></i>\n            </a>\n            <a href=\"https://github.com/tritonse\" className=\"tse-footer-social\">\n              <i className=\"fa fa-github\"></i>\n            </a>\n          </div>\n          <div className=\"col l2 s12\">\n            <h5 className=\"white-text\">General</h5>\n            <ul>\n              <li>\n                <Link to=\"/about\" className=\"tse-footer-link\">\n                  About\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/projects\" className=\"tse-footer-link\">\n                  Projects\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col l2 s12\">\n            <h5 className=\"white-text\">Students</h5>\n            <ul>\n              <li>\n                <Link to=\"/students\" className=\"tse-footer-link\">\n                  Apply\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/students#faq\" className=\"tse-footer-link\">\n                  FAQs\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col l2 s12\">\n            <h5 className=\"white-text\">Nonprofits</h5>\n            <ul>\n              <li>\n                <Link to=\"/nonprofits\" className=\"tse-footer-link\">\n                  Apply\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/nonprofits#faq\" className=\"tse-footer-link\">\n                  FAQs\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div className=\"footer-copyright navy\"></div>\n    </footer>\n  </div>\n);\n\nexport default props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        logo: file(relativePath: { eq: \"logo-yellow.png\" }) {\n          ...FluidImage\n        }\n      }\n    `}\n    render={data => <Footer data={data} {...props} />}\n  />\n);\n","import React from \"react\";\n\nfunction condense(text, length) {\n  if (text.length > length - 3) {\n    // If the string is too long, trim it and add ellipses at the end\n    return text.substring(0, length) + \"...\";\n  } else if (text.length < length) {\n    // HACKY: If the length of the text is too short, we pad it with invisible non-breaking spaces\n    // These spaces ensure that the card is padded vertically to the correct size\n    // Chances are descriptions are long enough but this is a fallback measure to keep card heights identical\n    let nbsp = \"\\xa0\".repeat(4);\n    let nbsp_scale = 1.7;\n    return (\n      text +\n      ` ${nbsp}`.repeat(((length - text.length) / nbsp.length) * nbsp_scale)\n    );\n  } else {\n    return text;\n  }\n}\n\nfunction gridify(elements, num_columns) {\n  let rows = [];\n  for (let i = 0; i < elements.length; i += num_columns) {\n    rows.push(<div className=\"row\">{elements.slice(i, i + num_columns)}</div>);\n  }\n  return rows;\n}\n\nexport { condense, gridify };\n"],"sourceRoot":""}