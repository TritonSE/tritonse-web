{"version":3,"sources":["webpack:///./src/components/members.js","webpack:///./src/components/divider.js","webpack:///./src/pages/alumni.js","webpack:///./src/components/navbar.js","webpack:///./src/components/footer.js","webpack:///./src/util/styling.js"],"names":["Members","data","members","priorities","President","Developer","elements","sort","a","b","node","role","name","localeCompare","map","value","key","className","fluid","image","childImageSharp","gridify","Divider","title","subtitle","textColor","lineColor","caption","classes","allTseMembers","edges","forEach","member","alumni","push","Object","keys","reverse","year","Navbar","componentDidMount","initMaterialize","dropdown","document","querySelectorAll","M","Dropdown","init","coverTrigger","render","this","props","gradient","foreground","background","logo","ylogo","blogo","id","href","to","data-target","React","Component","query","Footer","condense","text","length","substring","nbsp","repeat","num_columns","rows","i","slice"],"mappings":"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","file":"component---src-pages-alumni-js-1c3af7693436920937c7.js","sourcesContent":["import React from \"react\";\nimport Img from \"gatsby-image\";\nimport { gridify } from \"../util/styling.js\";\nimport \"../styles/pages.css\";\nimport \"../../node_modules/materialize-css/dist/css/materialize.min.css\";\n\nconst Members = ({ data, members }) => {\n  const priorities = {\n    President: 0,\n    \"VP Operations\": 1,\n    \"VP External\": 2,\n    \"VP Technology\": 3,\n    \"VP Projects\": 4,\n    \"VP Design\": 5,\n    \"Outreach Lead\": 6,\n    \"Marketing Lead\": 7,\n    \"Project Manager\": 8,\n    \"UI/UX Designer\": 9,\n    Developer: 10\n  };\n  const elements = members\n    .sort(\n      (a, b) =>\n        priorities[a.node.role] - priorities[b.node.role] ||\n        a.node.name.localeCompare(b.node.name)\n    )\n    .map(value => (\n      <div key={`${value.node.name}`} className=\"col l2 m4 s6 center\">\n        <div>\n          <Img\n            fluid={value.node.image.childImageSharp.fluid}\n            className=\"tse-profile-image\"\n          ></Img>\n        </div>\n        <div className=\"tse-profile-name\">\n          <b>{value.node.name}</b>\n        </div>\n        <div className=\"tse-profile-role\">{value.node.role}</div>\n      </div>\n    ));\n  return <div>{gridify(elements, 6)}</div>;\n};\n\nexport default Members;\n","import React from \"react\";\nimport \"../styles/divider.css\";\nimport \"../styles/colors.css\";\nimport \"../../node_modules/materialize-css/dist/css/materialize.min.css\";\n\nconst Divider = ({ title, subtitle, textColor, lineColor, caption }) => (\n  <div className=\"center tse-divider\">\n    <p className={`${textColor}`}>{subtitle}</p>\n    <h3 className={`${textColor}`}>{title}</h3>\n    <hr\n      className={`tse-divider-line ${\n        lineColor ? lineColor : \"tse-divider-line-amber\"\n      }`}\n    />\n    <p className={`tse-divider-caption ${textColor}`}>{caption}</p>\n  </div>\n);\n\nexport default Divider;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport SEO from \"../components/seo.js\";\nimport Navbar from \"../components/navbar.js\";\nimport Divider from \"../components/divider.js\";\nimport Footer from \"../components/footer.js\";\nimport Members from \"../components/members.js\";\nimport \"../styles/pages.css\";\nimport \"../styles/colors.css\";\nimport \"../../node_modules/materialize-css/dist/css/materialize.min.css\";\n\nexport default ({ data }) => {\n  const classes = {};\n  data.allTseMembers.edges.forEach(member => {\n    if (member.node.alumni in classes) {\n      classes[member.node.alumni].push(member);\n    } else {\n      classes[member.node.alumni] = [member];\n    }\n  });\n  const elements = [];\n  Object.keys(classes)\n    .sort()\n    .reverse()\n    .forEach(function(year) {\n      if (year === \"-1\" || year === -1) {\n        return;\n      }\n      const members = classes[year];\n      elements.push(\n        <div className=\"container\">\n          <h5>\n            Class of <b>{year}</b>\n          </h5>\n          <div className=\"tse-separation-small\"></div>\n          <Members members={members} />\n          <div className=\"tse-separation-medium\"></div>\n        </div>\n      );\n    });\n  return (\n    <div>\n      <SEO title=\"Alumni\" />\n      <Navbar />\n      <div className=\"container\">\n        <Divider\n          title={<span>Who Did What?</span>}\n          subtitle=\"GRADUATED ALUMNI\"\n          textColor=\"navy-text\"\n          lineColor=\"tse-divider-line-dark-yellow\"\n        />\n      </div>\n\n      <div className=\"navy\">\n        <div className=\"container\">\n          <div className=\"tse-padding-medium\"></div>\n          <h5 className=\"white-text\">\n            We thank all of our alumni for the hard work & dedication that they\n            have poured into TSE throughout their time at UCSD. Listed below is\n            each member, their graduation year and the highest position they\n            have held within the organization.\n          </h5>\n          <div className=\"tse-padding-medium\"></div>\n        </div>\n      </div>\n      <div className=\"tse-padding-medium\"></div>\n\n      {elements}\n      <Footer />\n    </div>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allTseMembers {\n      edges {\n        node {\n          name\n          role\n          image {\n            ...FluidImage\n          }\n          alumni\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link, StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport { initMaterialize } from \"../util/init.js\";\nimport \"../styles/navbar.css\";\nimport \"../styles/colors.css\";\nimport \"../../node_modules/materialize-css/dist/css/materialize.min.css\";\n\nclass Navbar extends React.Component {\n  componentDidMount() {\n    initMaterialize();\n    let dropdown = document.querySelectorAll(\".dropdown-trigger\");\n    let options = {\n      coverTrigger: false\n    };\n    /* global M */\n    M.Dropdown.init(dropdown, options);\n  }\n\n  render() {\n    const { data, gradient } = this.props;\n    const foreground = gradient ? \"white-text\" : \"navy-text\";\n    const background = gradient ? \"navy\" : \"white\";\n    const logo = gradient\n      ? data.ylogo.childImageSharp.fluid\n      : data.blogo.childImageSharp.fluid;\n    return (\n      <div>\n        <ul\n          id=\"tse-navbar-dropdown\"\n          className={`dropdown-content ${background}`}\n        >\n          <li>\n            <a href=\"/students\">\n              <span className={`tse-navbar-dropdown-item ${foreground}`}>\n                Students\n              </span>\n            </a>\n          </li>\n          <li>\n            <a href=\"/nonprofits\">\n              <span className={`tse-navbar-dropdown-item ${foreground}`}>\n                Nonprofits\n              </span>\n            </a>\n          </li>\n        </ul>\n        <nav className={background}>\n          <div className=\"nav-wrapper container\">\n            <div className=\"row\">\n              <div className=\"col s6\">\n                <Link to=\"/\">\n                  <Img fluid={logo} className=\"tse-navbar-logo\"></Img>\n                </Link>\n              </div>\n              <div className=\"col s6 show-on-medium-and-down\">\n                <a\n                  href=\"#!\"\n                  data-target=\"tse-mobile-menu\"\n                  className={`sidenav-trigger right ${foreground}`}\n                >\n                  <i className=\"material-icons\">menu</i>\n                </a>\n              </div>\n              <div className=\"col s6 hide-on-med-and-down\">\n                <ul className=\"right\">\n                  <li>\n                    <Link to=\"/\">\n                      <span className={`tse-navbar-link ${foreground}`}>\n                        Home\n                      </span>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"/about\">\n                      <span className={`tse-navbar-link ${foreground}`}>\n                        About\n                      </span>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"/projects\">\n                      <span className={`tse-navbar-link ${foreground}`}>\n                        Projects\n                      </span>\n                    </Link>\n                  </li>\n                  <li>\n                    <a\n                      className=\"dropdown-trigger\"\n                      href=\"#!\"\n                      data-target=\"tse-navbar-dropdown\"\n                    >\n                      <span className={`tse-navbar-link ${foreground}`}>\n                        Connect\n                      </span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </nav>\n        <ul className={`sidenav ${background}`} id=\"tse-mobile-menu\">\n          <li>\n            <a href=\"/\" className={foreground}>\n              <span className=\"tse-text-medium\">Home</span>\n            </a>\n          </li>\n          <li>\n            <a href=\"/about\" className={foreground}>\n              <span className=\"tse-text-medium\">About</span>\n            </a>\n          </li>\n          <li>\n            <a href=\"/projects\" className={foreground}>\n              <span className=\"tse-text-medium\">Projects</span>\n            </a>\n          </li>\n          <li>\n            <a href=\"/apply\" className={foreground}>\n              <span className=\"tse-text-medium\">Connect</span>\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        ylogo: file(relativePath: { eq: \"logo-yellow.png\" }) {\n          ...FluidImage\n        }\n        blogo: file(relativePath: { eq: \"logo-blue.png\" }) {\n          ...FluidImage\n        }\n      }\n    `}\n    render={data => <Navbar data={data} {...props} />}\n  />\n);\n","import React from \"react\";\nimport { Link, StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport \"../styles/footer.css\";\nimport \"../styles/colors.css\";\nimport \"../../node_modules/materialize-css/dist/css/materialize.min.css\";\nimport \"../../node_modules/font-awesome/css/font-awesome.min.css\";\n\nconst Footer = ({ data }) => (\n  <div>\n    <div className=\"tse-footer-semicircle\"></div>\n    <footer className=\"page-footer navy\">\n      <div className=\"container navy\">\n        <div className=\"row\">\n          <div className=\"col l6 s12\">\n            <Link to=\"/\">\n              <Img\n                fluid={data.logo.childImageSharp.fluid}\n                className=\"tse-footer-logo\"\n              ></Img>\n            </Link>\n            <p className=\"grey-text text-lighten-4\">tse@ucsd.edu</p>\n            <a href=\"https://fb.com/tritonse\" className=\"tse-footer-social\">\n              <i className=\"fa fa-facebook\"></i>\n            </a>\n            <a\n              href=\"https://linkedin.com/company/tritonsoftwareengineering/\"\n              className=\"tse-footer-social\"\n            >\n              <i className=\"fa fa-linkedin\"></i>\n            </a>\n            <a href=\"https://github.com/tritonse\" className=\"tse-footer-social\">\n              <i className=\"fa fa-github\"></i>\n            </a>\n          </div>\n          <div className=\"col l2 s12\">\n            <h5 className=\"white-text\">General</h5>\n            <ul>\n              <li>\n                <Link to=\"/about\" className=\"tse-footer-link\">\n                  About\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/projects\" className=\"tse-footer-link\">\n                  Projects\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col l2 s12\">\n            <h5 className=\"white-text\">Students</h5>\n            <ul>\n              <li>\n                <Link to=\"/students\" className=\"tse-footer-link\">\n                  Apply\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/students#faq\" className=\"tse-footer-link\">\n                  FAQs\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col l2 s12\">\n            <h5 className=\"white-text\">Nonprofits</h5>\n            <ul>\n              <li>\n                <Link to=\"/nonprofits\" className=\"tse-footer-link\">\n                  Apply\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/nonprofits#faq\" className=\"tse-footer-link\">\n                  FAQs\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div className=\"footer-copyright navy\"></div>\n    </footer>\n  </div>\n);\n\nexport default props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        logo: file(relativePath: { eq: \"logo-yellow.png\" }) {\n          ...FluidImage\n        }\n      }\n    `}\n    render={data => <Footer data={data} {...props} />}\n  />\n);\n","import React from \"react\";\n\nfunction condense(text, length) {\n  if (text.length > length - 3) {\n    // If the string is too long, trim it and add ellipses at the end\n    return text.substring(0, length) + \"...\";\n  } else if (text.length < length) {\n    // HACKY: If the length of the text is too short, we pad it with invisible non-breaking spaces\n    // These spaces ensure that the card is padded vertically to the correct size\n    // Chances are descriptions are long enough but this is a fallback measure to keep card heights identical\n    let nbsp = \"\\xa0\".repeat(4);\n    let nbsp_scale = 1.7;\n    return (\n      text +\n      ` ${nbsp}`.repeat(((length - text.length) / nbsp.length) * nbsp_scale)\n    );\n  } else {\n    return text;\n  }\n}\n\nfunction gridify(elements, num_columns) {\n  let rows = [];\n  for (let i = 0; i < elements.length; i += num_columns) {\n    rows.push(<div className=\"row\">{elements.slice(i, i + num_columns)}</div>);\n  }\n  return rows;\n}\n\nexport { condense, gridify };\n"],"sourceRoot":""}