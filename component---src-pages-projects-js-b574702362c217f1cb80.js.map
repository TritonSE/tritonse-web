{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/header.js"],"names":["data","get_project_html","value","key","node","name","className","fluid","local_image","childImageSharp","to","id","title","condense","subtitle","ongoing_projects","allTseProjects","edges","filter","ongoing","map","completed_projects","buttons","href","background","gridify","query","Header","gradient"],"mappings":"mPAee,sBAAa,IAAXA,EAAU,EAAVA,KACTC,EAAmB,SAACC,GACxB,OACE,yBAAKC,IAAG,GAAKD,EAAME,KAAKC,MACtB,yBAAKC,UAAU,cACb,kBAAC,IAAD,CAAKC,MAAOL,EAAME,KAAKI,YAAYC,gBAAgBF,MAAOD,UAAU,sBACpE,yBAAKA,UAAU,4BACb,kBAAC,IAAD,CAAMI,GAAE,YAAcR,EAAME,KAAKO,GAAML,UAAU,0CAAyC,uBAAGA,UAAU,yBAAyBJ,EAAME,KAAKQ,SAE7I,uBAAGN,UAAU,mBAAmBO,YAASX,EAAME,KAAKU,SAAU,SAOlEC,EAAmBf,EAAKgB,eAAeC,MACxCC,OAAO,SAAChB,GACP,OAAOA,EAAME,KAAKe,UAEnBC,IAAI,SAAClB,GACJ,OAAOD,EAAiBC,KAGxBmB,EAAqBrB,EAAKgB,eAAeC,MAC1CC,OAAO,SAAChB,GACP,OAAQA,EAAME,KAAKe,UAEpBC,IAAI,SAAClB,GACJ,OAAOD,EAAiBC,KAI5B,OAAQ,6BACN,kBAAC,IAAD,CAAKU,MAAM,aACX,kBAAC,IAAD,CACEA,MACE,qCAAU,0BAAMN,UAAU,cAAhB,aAEZQ,SAAS,qGACTQ,QACE,8BACE,uBAAGhB,UAAU,qEAAqEiB,KAAK,+BAAvF,mBAEE,uBAAGjB,UAAU,wBAAb,UAINkB,WAAW,qBAEb,yBAAKlB,UAAU,aACb,kBAAC,IAAD,CAASM,MAAM,wBAAwBE,SAAS,qBAC/CW,YAAQV,EAAkB,IAE7B,yBAAKT,UAAU,aACb,kBAAC,IAAD,CAASM,MAAM,qBAAqBE,SAAS,kBAC5CW,YAAQJ,EAAoB,IAE/B,kBAAC,IAAD,QAIG,IAAMK,EAAK,c,iCC7ElB,2CA8BeC,IAtBA,SAAC,GAAD,EAAE3B,KAAF,IAAQY,EAAR,EAAQA,MAAOE,EAAf,EAAeA,SAAUQ,EAAzB,EAAyBA,QAASE,EAAlC,EAAkCA,WAAlC,OACb,6BACE,kBAAC,IAAD,CAAQI,UAAU,IAClB,yBAAKtB,UAAS,eAAgBkB,GAA0B,wBACtD,yBAAKlB,UAAU,aACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,WACb,4BAAKM,IAEP,yBAAKN,UAAU,WACb,4BAAKQ,IAEP,yBAAKR,UAAU,8BACZgB,IAGL","file":"component---src-pages-projects-js-b574702362c217f1cb80.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport SEO from '../components/seo.js'\nimport Header from '../components/header.js'\nimport Divider from '../components/divider.js'\nimport Footer from '../components/footer.js'\n\nimport { condense, gridify } from '../util/styling.js'\n\nimport '../styles/pages.css'\n\nimport '../../node_modules/materialize-css/dist/css/materialize.min.css'\n\nexport default ({data}) => {\n  const get_project_html = (value) => {\n    return (\n      <div key={`${value.node.name}`}>\n        <div className=\"col l4 s12\">\n          <Img fluid={value.node.local_image.childImageSharp.fluid} className=\"tse-project-image\"></Img>\n          <div className=\"tse-project-title center\">\n            <Link to={`/project/${value.node.id}`} className=\"blue-text text-darken-3 tse-text-large\"><b className=\"tse-project-link-blue\">{value.node.title}</b></Link>\n          </div>\n          <p className=\"tse-text-medium\">{condense(value.node.subtitle, 250)}</p>\n        </div>\n      </div>\n    )\n  };\n  // Project information is stored in data.allTseProjects\n  // This is fetched using a GraphQL query that maps to the tritonse-source-firestore plugin\n  let ongoing_projects = data.allTseProjects.edges\n    .filter((value) => {\n      return value.node.ongoing\n    })\n    .map((value) => {\n      return get_project_html(value);      \n    }\n  );\n  let completed_projects = data.allTseProjects.edges\n    .filter((value) => {\n      return !value.node.ongoing\n    })\n    .map((value) => {\n      return get_project_html(value);      \n    }\n  );\n\n  return (<div>\n    <SEO title=\"Projects\"/>\n    <Header\n      title={\n        <span>Our <span className=\"amber-text\">Projects</span></span>\n      }\n      subtitle=\"At TSE, we believe in keeping our work open source because we value transparency and connectivity.\"\n      buttons={\n        <span>\n          <a className=\"waves-effect waves-light btn-large blue darken-4 tse-header-button\" href=\"https://github.com/tritonse\">\n            Visit Our GitHub\n            <i className=\"material-icons right\">code</i>\n          </a>\n        </span>\n      }\n      background='tse-header-hands'\n    />\n    <div className=\"container\">\n      <Divider title=\"What We've Been Up To\" subtitle=\"CURRENT PROJECTS\"/>\n      {gridify(ongoing_projects, 3)}\n    </div>\n    <div className=\"container\">\n      <Divider title=\"What We Were Up To\" subtitle=\"PAST PROJECTS\"/>\n      {gridify(completed_projects, 3)}\n    </div>\n    <Footer/>\n  </div>)\n}\n\nexport const query = graphql`\n  query {\n    allTseProjects {\n      edges {\n        node {\n          id\n          title\n          subtitle\n          ongoing\n          local_image {\n            ...FluidImage\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\n\nimport Navbar from '../components/navbar.js'\n\nimport '../styles/header.css'\n\nimport '../../node_modules/materialize-css/dist/css/materialize.min.css'\n\nconst Header = ({data, title, subtitle, buttons, background}) => ( \n  <div>\n    <Navbar gradient={true}/>\n    <div className={`tse-header ${background ? background : 'tse-header-gradient'}`}>\n      <div className=\"container\">\n        <div className=\"row center white-text\">\n          <div className=\"col s12\">\n            <h1>{title}</h1>\n          </div>\n          <div className=\"col s12\">\n            <h5>{subtitle}</h5>\n          </div>\n          <div className=\"col s12 tse-header-buttons\">\n            {buttons}\n          </div>\n        </div>\n        <p></p>\n      </div>\n    </div>\n  </div>\n) \n\nexport default Header;\n"],"sourceRoot":""}